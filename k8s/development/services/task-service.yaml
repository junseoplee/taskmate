---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: task-service
  namespace: taskmate-dev
  labels:
    app: task-service
    service: task
spec:
  replicas: 2
  selector:
    matchLabels:
      app: task-service
  template:
    metadata:
      labels:
        app: task-service
        service: task
    spec:
      initContainers:
      - name: wait-for-postgres
        image: postgres:15
        command: ['sh', '-c', 'until pg_isready -h postgres-service -p 5432 -U taskmate; do echo waiting for postgres; sleep 2; done;']
      - name: wait-for-redis
        image: redis:7-alpine
        command: ['sh', '-c', 'until redis-cli -h redis-service ping; do echo waiting for redis; sleep 1; done;']
      - name: wait-for-user-service
        image: curlimages/curl:latest
        command: ['sh', '-c', 'until curl -f http://user-service:3000/up; do echo waiting for user-service; sleep 5; done;']
      containers:
      - name: task-service
        image: taskmate/task-service:dev
        imagePullPolicy: Never  # Use locally built image
        ports:
        - containerPort: 3001
        env:
        - name: RAILS_ENV
          valueFrom:
            configMapKeyRef:
              name: taskmate-config
              key: RAILS_ENV
        - name: DATABASE_URL
          value: "postgresql://taskmate:password@postgres-service:5432/task_service_db"
        - name: REDIS_URL
          value: "redis://redis-service:6379/1"
        - name: USER_SERVICE_URL
          value: "http://user-service:3000"
        - name: RAILS_MASTER_KEY_DUMMY
          value: "1"
        livenessProbe:
          httpGet:
            path: /up
            port: 3001
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /up
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: task-service
  namespace: taskmate-dev
  labels:
    app: task-service
    service: task
spec:
  type: ClusterIP
  ports:
  - port: 3001
    targetPort: 3001
    protocol: TCP
    name: http
  selector:
    app: task-service
---
# NodePort service for external access during development
apiVersion: v1
kind: Service
metadata:
  name: task-service-nodeport
  namespace: taskmate-dev
  labels:
    app: task-service
    service: task
spec:
  type: NodePort
  ports:
  - port: 3001
    targetPort: 3001
    nodePort: 30001
    protocol: TCP
    name: http
  selector:
    app: task-service